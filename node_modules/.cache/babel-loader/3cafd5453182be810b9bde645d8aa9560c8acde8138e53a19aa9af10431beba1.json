{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\Project\\\\Safety2\\\\src\\\\context\\\\LocationContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LocationContext = /*#__PURE__*/createContext();\nexport const LocationProvider = ({\n  children\n}) => {\n  _s();\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [locationHistory, setLocationHistory] = useState([]);\n  const [savedPlaces, setSavedPlaces] = useState([]);\n  const [isLocationSharing, setIsLocationSharing] = useState(false);\n  const [isBatterySaverMode, setIsBatterySaverMode] = useState(false);\n  const [error, setError] = useState(null);\n  const [loadingLocation, setLoadingLocation] = useState(true);\n  const [safeRoutes, setSafeRoutes] = useState([]);\n\n  // Function to toggle location sharing\n  const toggleLocationSharing = () => {\n    setIsLocationSharing(prev => !prev);\n  };\n\n  // Function to toggle battery saver mode\n  const toggleBatterySaverMode = () => {\n    setIsBatterySaverMode(prev => !prev);\n  };\n\n  // Add a new saved place\n  const addSavedPlace = place => {\n    setSavedPlaces(prev => [...prev, {\n      ...place,\n      id: Date.now()\n    }]);\n  };\n\n  // Remove a saved place\n  const removeSavedPlace = placeId => {\n    setSavedPlaces(prev => prev.filter(place => place.id !== placeId));\n  };\n\n  // Get safe routes between two points\n  const getSafeRoutes = useCallback(async (origin, destination) => {\n    try {\n      // This would be an actual API call in a real app\n      // For demo purposes, we'll simulate it with a timeout\n      setLoadingLocation(true);\n\n      // Simulate API delay\n      await new Promise(resolve => setTimeout(resolve, 1500));\n\n      // Simulate receiving safe routes\n      const mockSafeRoutes = [{\n        id: 1,\n        name: 'Safest Route',\n        distance: '3.2 km',\n        duration: '12 min',\n        safetyScore: 95,\n        points: [{\n          lat: origin.lat,\n          lng: origin.lng\n        }, {\n          lat: origin.lat + 0.01,\n          lng: origin.lng + 0.01\n        }, {\n          lat: destination.lat - 0.01,\n          lng: destination.lng - 0.01\n        }, {\n          lat: destination.lat,\n          lng: destination.lng\n        }]\n      }, {\n        id: 2,\n        name: 'Fastest Route',\n        distance: '2.8 km',\n        duration: '10 min',\n        safetyScore: 80,\n        points: [{\n          lat: origin.lat,\n          lng: origin.lng\n        }, {\n          lat: origin.lat + 0.005,\n          lng: origin.lng + 0.005\n        }, {\n          lat: destination.lat - 0.005,\n          lng: destination.lng - 0.005\n        }, {\n          lat: destination.lat,\n          lng: destination.lng\n        }]\n      }];\n      setSafeRoutes(mockSafeRoutes);\n      setLoadingLocation(false);\n      return mockSafeRoutes;\n    } catch (err) {\n      setError('Failed to calculate safe routes');\n      setLoadingLocation(false);\n      return [];\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(LocationContext.Provider, {\n    value: {\n      currentLocation,\n      locationHistory,\n      savedPlaces,\n      isLocationSharing,\n      isBatterySaverMode,\n      loadingLocation,\n      error,\n      safeRoutes,\n      toggleLocationSharing,\n      toggleBatterySaverMode,\n      addSavedPlace,\n      removeSavedPlace,\n      getSafeRoutes\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(LocationProvider, \"uVP4TDwNKyfJBPgOUbRgqbZA/Xo=\");\n_c = LocationProvider;\nvar _c;\n$RefreshReg$(_c, \"LocationProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useCallback","jsxDEV","_jsxDEV","LocationContext","LocationProvider","children","_s","currentLocation","setCurrentLocation","locationHistory","setLocationHistory","savedPlaces","setSavedPlaces","isLocationSharing","setIsLocationSharing","isBatterySaverMode","setIsBatterySaverMode","error","setError","loadingLocation","setLoadingLocation","safeRoutes","setSafeRoutes","toggleLocationSharing","prev","toggleBatterySaverMode","addSavedPlace","place","id","Date","now","removeSavedPlace","placeId","filter","getSafeRoutes","origin","destination","Promise","resolve","setTimeout","mockSafeRoutes","name","distance","duration","safetyScore","points","lat","lng","err","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Downloads/Project/Safety2/src/context/LocationContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useCallback } from 'react';\r\n\r\nexport const LocationContext = createContext();\r\n\r\nexport const LocationProvider = ({ children }) => {\r\n  const [currentLocation, setCurrentLocation] = useState(null);\r\n  const [locationHistory, setLocationHistory] = useState([]);\r\n  const [savedPlaces, setSavedPlaces] = useState([]);\r\n  const [isLocationSharing, setIsLocationSharing] = useState(false);\r\n  const [isBatterySaverMode, setIsBatterySaverMode] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [loadingLocation, setLoadingLocation] = useState(true);\r\n  const [safeRoutes, setSafeRoutes] = useState([]);\r\n  \r\n  // Function to toggle location sharing\r\n  const toggleLocationSharing = () => {\r\n    setIsLocationSharing(prev => !prev);\r\n  };\r\n\r\n  // Function to toggle battery saver mode\r\n  const toggleBatterySaverMode = () => {\r\n    setIsBatterySaverMode(prev => !prev);\r\n  };\r\n  \r\n  // Add a new saved place\r\n  const addSavedPlace = (place) => {\r\n    setSavedPlaces(prev => [...prev, { ...place, id: Date.now() }]);\r\n  };\r\n  \r\n  // Remove a saved place\r\n  const removeSavedPlace = (placeId) => {\r\n    setSavedPlaces(prev => prev.filter(place => place.id !== placeId));\r\n  };\r\n  \r\n  // Get safe routes between two points\r\n  const getSafeRoutes = useCallback(async (origin, destination) => {\r\n    try {\r\n      // This would be an actual API call in a real app\r\n      // For demo purposes, we'll simulate it with a timeout\r\n      setLoadingLocation(true);\r\n      \r\n      // Simulate API delay\r\n      await new Promise(resolve => setTimeout(resolve, 1500));\r\n      \r\n      // Simulate receiving safe routes\r\n      const mockSafeRoutes = [\r\n        {\r\n          id: 1,\r\n          name: 'Safest Route',\r\n          distance: '3.2 km',\r\n          duration: '12 min',\r\n          safetyScore: 95,\r\n          points: [\r\n            { lat: origin.lat, lng: origin.lng },\r\n            { lat: origin.lat + 0.01, lng: origin.lng + 0.01 },\r\n            { lat: destination.lat - 0.01, lng: destination.lng - 0.01 },\r\n            { lat: destination.lat, lng: destination.lng }\r\n          ]\r\n        },\r\n        {\r\n          id: 2,\r\n          name: 'Fastest Route',\r\n          distance: '2.8 km',\r\n          duration: '10 min',\r\n          safetyScore: 80,\r\n          points: [\r\n            { lat: origin.lat, lng: origin.lng },\r\n            { lat: origin.lat + 0.005, lng: origin.lng + 0.005 },\r\n            { lat: destination.lat - 0.005, lng: destination.lng - 0.005 },\r\n            { lat: destination.lat, lng: destination.lng }\r\n          ]\r\n        }\r\n      ];\r\n      \r\n      setSafeRoutes(mockSafeRoutes);\r\n      setLoadingLocation(false);\r\n      return mockSafeRoutes;\r\n    } catch (err) {\r\n      setError('Failed to calculate safe routes');\r\n      setLoadingLocation(false);\r\n      return [];\r\n    }\r\n  }, []);\r\n  \r\n  return (\r\n    <LocationContext.Provider value={{\r\n      currentLocation,\r\n      locationHistory,\r\n      savedPlaces,\r\n      isLocationSharing,\r\n      isBatterySaverMode,\r\n      loadingLocation,\r\n      error,\r\n      safeRoutes,\r\n      toggleLocationSharing,\r\n      toggleBatterySaverMode,\r\n      addSavedPlace,\r\n      removeSavedPlace,\r\n      getSafeRoutes\r\n    }}>\r\n      {children}\r\n    </LocationContext.Provider>\r\n  );\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/E,OAAO,MAAMC,eAAe,gBAAGN,aAAa,CAAC,CAAC;AAE9C,OAAO,MAAMO,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACe,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACiB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACqB,eAAe,EAAEC,kBAAkB,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACuB,UAAU,EAAEC,aAAa,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAMyB,qBAAqB,GAAGA,CAAA,KAAM;IAClCT,oBAAoB,CAACU,IAAI,IAAI,CAACA,IAAI,CAAC;EACrC,CAAC;;EAED;EACA,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;IACnCT,qBAAqB,CAACQ,IAAI,IAAI,CAACA,IAAI,CAAC;EACtC,CAAC;;EAED;EACA,MAAME,aAAa,GAAIC,KAAK,IAAK;IAC/Bf,cAAc,CAACY,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;MAAE,GAAGG,KAAK;MAAEC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC;IAAE,CAAC,CAAC,CAAC;EACjE,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAIC,OAAO,IAAK;IACpCpB,cAAc,CAACY,IAAI,IAAIA,IAAI,CAACS,MAAM,CAACN,KAAK,IAAIA,KAAK,CAACC,EAAE,KAAKI,OAAO,CAAC,CAAC;EACpE,CAAC;;EAED;EACA,MAAME,aAAa,GAAGlC,WAAW,CAAC,OAAOmC,MAAM,EAAEC,WAAW,KAAK;IAC/D,IAAI;MACF;MACA;MACAhB,kBAAkB,CAAC,IAAI,CAAC;;MAExB;MACA,MAAM,IAAIiB,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;;MAEvD;MACA,MAAME,cAAc,GAAG,CACrB;QACEZ,EAAE,EAAE,CAAC;QACLa,IAAI,EAAE,cAAc;QACpBC,QAAQ,EAAE,QAAQ;QAClBC,QAAQ,EAAE,QAAQ;QAClBC,WAAW,EAAE,EAAE;QACfC,MAAM,EAAE,CACN;UAAEC,GAAG,EAAEX,MAAM,CAACW,GAAG;UAAEC,GAAG,EAAEZ,MAAM,CAACY;QAAI,CAAC,EACpC;UAAED,GAAG,EAAEX,MAAM,CAACW,GAAG,GAAG,IAAI;UAAEC,GAAG,EAAEZ,MAAM,CAACY,GAAG,GAAG;QAAK,CAAC,EAClD;UAAED,GAAG,EAAEV,WAAW,CAACU,GAAG,GAAG,IAAI;UAAEC,GAAG,EAAEX,WAAW,CAACW,GAAG,GAAG;QAAK,CAAC,EAC5D;UAAED,GAAG,EAAEV,WAAW,CAACU,GAAG;UAAEC,GAAG,EAAEX,WAAW,CAACW;QAAI,CAAC;MAElD,CAAC,EACD;QACEnB,EAAE,EAAE,CAAC;QACLa,IAAI,EAAE,eAAe;QACrBC,QAAQ,EAAE,QAAQ;QAClBC,QAAQ,EAAE,QAAQ;QAClBC,WAAW,EAAE,EAAE;QACfC,MAAM,EAAE,CACN;UAAEC,GAAG,EAAEX,MAAM,CAACW,GAAG;UAAEC,GAAG,EAAEZ,MAAM,CAACY;QAAI,CAAC,EACpC;UAAED,GAAG,EAAEX,MAAM,CAACW,GAAG,GAAG,KAAK;UAAEC,GAAG,EAAEZ,MAAM,CAACY,GAAG,GAAG;QAAM,CAAC,EACpD;UAAED,GAAG,EAAEV,WAAW,CAACU,GAAG,GAAG,KAAK;UAAEC,GAAG,EAAEX,WAAW,CAACW,GAAG,GAAG;QAAM,CAAC,EAC9D;UAAED,GAAG,EAAEV,WAAW,CAACU,GAAG;UAAEC,GAAG,EAAEX,WAAW,CAACW;QAAI,CAAC;MAElD,CAAC,CACF;MAEDzB,aAAa,CAACkB,cAAc,CAAC;MAC7BpB,kBAAkB,CAAC,KAAK,CAAC;MACzB,OAAOoB,cAAc;IACvB,CAAC,CAAC,OAAOQ,GAAG,EAAE;MACZ9B,QAAQ,CAAC,iCAAiC,CAAC;MAC3CE,kBAAkB,CAAC,KAAK,CAAC;MACzB,OAAO,EAAE;IACX;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACElB,OAAA,CAACC,eAAe,CAAC8C,QAAQ;IAACC,KAAK,EAAE;MAC/B3C,eAAe;MACfE,eAAe;MACfE,WAAW;MACXE,iBAAiB;MACjBE,kBAAkB;MAClBI,eAAe;MACfF,KAAK;MACLI,UAAU;MACVE,qBAAqB;MACrBE,sBAAsB;MACtBC,aAAa;MACbK,gBAAgB;MAChBG;IACF,CAAE;IAAA7B,QAAA,EACCA;EAAQ;IAAA8C,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAAChD,EAAA,CAnGWF,gBAAgB;AAAAmD,EAAA,GAAhBnD,gBAAgB;AAAA,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}