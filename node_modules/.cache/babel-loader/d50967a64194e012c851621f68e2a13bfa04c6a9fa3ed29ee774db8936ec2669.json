{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\Project\\\\Safety2\\\\src\\\\components\\\\map\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { GoogleMap, useJsApiLoader, Marker, DirectionsRenderer } from '@react-google-maps/api';\nimport styles from './Map.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '100%'\n};\n\n// We would use a real API key in production\nconst GOOGLE_MAPS_API_KEY = 'YOUR_API_KEY_HERE';\nconst Map = ({\n  center,\n  zoom = 14,\n  markers = [],\n  routes = []\n}) => {\n  _s();\n  var _routes$;\n  const [map, setMap] = useState(null);\n  const [directions, setDirections] = useState(null);\n  const {\n    isLoaded,\n    loadError\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: GOOGLE_MAPS_API_KEY\n  });\n  const onLoad = React.useCallback(function callback(map) {\n    setMap(map);\n  }, []);\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n\n  // If a route is provided, display it\n  React.useEffect(() => {\n    if (routes.length > 0 && isLoaded && window.google) {\n      const directionsService = new window.google.maps.DirectionsService();\n\n      // Use the first route for now\n      const route = routes[0];\n\n      // Convert route points to DirectionsService waypoints\n      if (route.points && route.points.length >= 2) {\n        const origin = route.points[0];\n        const destination = route.points[route.points.length - 1];\n        const waypoints = route.points.slice(1, -1).map(point => ({\n          location: new window.google.maps.LatLng(point.lat, point.lng),\n          stopover: false\n        }));\n        directionsService.route({\n          origin: new window.google.maps.LatLng(origin.lat, origin.lng),\n          destination: new window.google.maps.LatLng(destination.lat, destination.lng),\n          waypoints: waypoints,\n          optimizeWaypoints: true,\n          travelMode: window.google.maps.TravelMode.WALKING\n        }, (result, status) => {\n          if (status === window.google.maps.DirectionsStatus.OK) {\n            setDirections(result);\n          } else {\n            console.error(`Directions request failed: ${status}`);\n          }\n        });\n      }\n    }\n  }, [routes, isLoaded]);\n  if (loadError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.mapError,\n      children: \"Map cannot be loaded right now, sorry.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 12\n    }, this);\n  }\n  if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.mapLoading,\n      children: \"Loading map...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: zoom,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    options: {\n      disableDefaultUI: true,\n      zoomControl: true,\n      streetViewControl: false,\n      mapTypeControl: false,\n      fullscreenControl: true\n    },\n    children: [/*#__PURE__*/_jsxDEV(Marker, {\n      position: center,\n      icon: {\n        path: window.google.maps.SymbolPath.CIRCLE,\n        fillColor: '#4285F4',\n        fillOpacity: 1,\n        strokeColor: '#FFFFFF',\n        strokeWeight: 2,\n        scale: 8\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), markers.map((marker, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: marker.lat,\n        lng: marker.lng\n      },\n      title: marker.title,\n      icon: marker.icon\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)), directions && /*#__PURE__*/_jsxDEV(DirectionsRenderer, {\n      directions: directions,\n      options: {\n        polylineOptions: {\n          strokeColor: ((_routes$ = routes[0]) === null || _routes$ === void 0 ? void 0 : _routes$.color) || '#4285F4',\n          strokeWeight: 5,\n          strokeOpacity: 0.8\n        },\n        suppressMarkers: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"LvxRP+Y2iYQFtQKLsW+lH/mVu20=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = Map;\nexport default _c2 = /*#__PURE__*/React.memo(Map);\nvar _c, _c2;\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","GoogleMap","useJsApiLoader","Marker","DirectionsRenderer","styles","jsxDEV","_jsxDEV","containerStyle","width","height","GOOGLE_MAPS_API_KEY","Map","center","zoom","markers","routes","_s","_routes$","map","setMap","directions","setDirections","isLoaded","loadError","id","googleMapsApiKey","onLoad","useCallback","callback","onUnmount","useEffect","length","window","google","directionsService","maps","DirectionsService","route","points","origin","destination","waypoints","slice","point","location","LatLng","lat","lng","stopover","optimizeWaypoints","travelMode","TravelMode","WALKING","result","status","DirectionsStatus","OK","console","error","className","mapError","children","fileName","_jsxFileName","lineNumber","columnNumber","mapLoading","mapContainerStyle","options","disableDefaultUI","zoomControl","streetViewControl","mapTypeControl","fullscreenControl","position","icon","path","SymbolPath","CIRCLE","fillColor","fillOpacity","strokeColor","strokeWeight","scale","marker","index","title","polylineOptions","color","strokeOpacity","suppressMarkers","_c","_c2","memo","$RefreshReg$"],"sources":["D:/Downloads/Project/Safety2/src/components/map/Map.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { GoogleMap, useJsApiLoader, Marker, DirectionsRenderer } from '@react-google-maps/api';\r\nimport styles from './Map.module.css';\r\n\r\nconst containerStyle = {\r\n  width: '100%',\r\n  height: '100%'\r\n};\r\n\r\n// We would use a real API key in production\r\nconst GOOGLE_MAPS_API_KEY = 'YOUR_API_KEY_HERE';\r\n\r\nconst Map = ({ center, zoom = 14, markers = [], routes = [] }) => {\r\n  const [map, setMap] = useState(null);\r\n  const [directions, setDirections] = useState(null);\r\n  \r\n  const { isLoaded, loadError } = useJsApiLoader({\r\n    id: 'google-map-script',\r\n    googleMapsApiKey: GOOGLE_MAPS_API_KEY\r\n  });\r\n\r\n  const onLoad = React.useCallback(function callback(map) {\r\n    setMap(map);\r\n  }, []);\r\n\r\n  const onUnmount = React.useCallback(function callback(map) {\r\n    setMap(null);\r\n  }, []);\r\n\r\n  // If a route is provided, display it\r\n  React.useEffect(() => {\r\n    if (routes.length > 0 && isLoaded && window.google) {\r\n      const directionsService = new window.google.maps.DirectionsService();\r\n      \r\n      // Use the first route for now\r\n      const route = routes[0];\r\n      \r\n      // Convert route points to DirectionsService waypoints\r\n      if (route.points && route.points.length >= 2) {\r\n        const origin = route.points[0];\r\n        const destination = route.points[route.points.length - 1];\r\n        const waypoints = route.points.slice(1, -1).map(point => ({\r\n          location: new window.google.maps.LatLng(point.lat, point.lng),\r\n          stopover: false\r\n        }));\r\n        \r\n        directionsService.route({\r\n          origin: new window.google.maps.LatLng(origin.lat, origin.lng),\r\n          destination: new window.google.maps.LatLng(destination.lat, destination.lng),\r\n          waypoints: waypoints,\r\n          optimizeWaypoints: true,\r\n          travelMode: window.google.maps.TravelMode.WALKING\r\n        }, (result, status) => {\r\n          if (status === window.google.maps.DirectionsStatus.OK) {\r\n            setDirections(result);\r\n          } else {\r\n            console.error(`Directions request failed: ${status}`);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [routes, isLoaded]);\r\n\r\n  if (loadError) {\r\n    return <div className={styles.mapError}>Map cannot be loaded right now, sorry.</div>;\r\n  }\r\n\r\n  if (!isLoaded) {\r\n    return <div className={styles.mapLoading}>Loading map...</div>;\r\n  }\r\n\r\n  return (\r\n    <GoogleMap\r\n      mapContainerStyle={containerStyle}\r\n      center={center}\r\n      zoom={zoom}\r\n      onLoad={onLoad}\r\n      onUnmount={onUnmount}\r\n      options={{\r\n        disableDefaultUI: true,\r\n        zoomControl: true,\r\n        streetViewControl: false,\r\n        mapTypeControl: false,\r\n        fullscreenControl: true,\r\n      }}\r\n    >\r\n      {/* Current location marker */}\r\n      <Marker\r\n        position={center}\r\n        icon={{\r\n          path: window.google.maps.SymbolPath.CIRCLE,\r\n          fillColor: '#4285F4',\r\n          fillOpacity: 1,\r\n          strokeColor: '#FFFFFF',\r\n          strokeWeight: 2,\r\n          scale: 8\r\n        }}\r\n      />\r\n      \r\n      {/* Additional markers */}\r\n      {markers.map((marker, index) => (\r\n        <Marker\r\n          key={index}\r\n          position={{ lat: marker.lat, lng: marker.lng }}\r\n          title={marker.title}\r\n          icon={marker.icon}\r\n        />\r\n      ))}\r\n      \r\n      {/* Route directions */}\r\n      {directions && (\r\n        <DirectionsRenderer\r\n          directions={directions}\r\n          options={{\r\n            polylineOptions: {\r\n              strokeColor: routes[0]?.color || '#4285F4',\r\n              strokeWeight: 5,\r\n              strokeOpacity: 0.8\r\n            },\r\n            suppressMarkers: true\r\n          }}\r\n        />\r\n      )}\r\n    </GoogleMap>\r\n  );\r\n};\r\n\r\nexport default React.memo(Map);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}